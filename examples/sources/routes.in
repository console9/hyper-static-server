{
	
	// ################################################################################
	
	
	askama! ("_/home.html" => "/examples/askama/without-context/home");
	
	askama! ({"_/home.html", context : ()} => "/examples/askama/with-context-empty/home-nodebug");
	askama! ({"_/home-with-context.html", context : ()} => "/examples/askama/with-context-empty/home-debug");
	askama! ({"_/home-with-trait.html", trait : ExampleAskamaTrait} => "/examples/askama/with-trait/home");
	
	askamas! ({"_", glob : "*/page-*.html"} => "/examples/askamas-recursive/without-context");
	askamas! ({"_", glob : "*/page-*.html", context : ()} => "/examples/askamas-recursive/with-context-empty");
	// NOTE:  Not required, because `askama` properly tracks its dependencies.
	// askamas_watch! ({"_", glob : "*.html-0"});
	
	askama! ({"_/home.html", context : ExampleAskamaContext, context_from : "./files/context.json"} => "/examples/askama/with-context-example/home-json-nodebug");
	askama! ({"_/home.html", context : ExampleAskamaContext, context_from : "./files/context.toml"} => "/examples/askama/with-context-example/home-toml-nodebug");
	askama! ({"_/home.html", context : ExampleAskamaContext, context_from : "./files/context.yaml"} => "/examples/askama/with-context-example/home-yaml-nodebug");
	
	askama! ({"_/home-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.json"} => "/examples/askama/with-context-example/home-json-debug");
	askama! ({"_/home-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.toml"} => "/examples/askama/with-context-example/home-toml-debug");
	askama! ({"_/home-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.yaml"} => "/examples/askama/with-context-example/home-yaml-debug");
	
	
	// ################################################################################
	
	
	markdown! ("_/hello.md" => "/examples/markdown/plain/hello");
	markdown! ({"_/hello.md", header : "_/_header.html-0", footer : "_/_footer.html-0"} => "/examples/markdown/simple/hello");
	
	markdown_askama! ({"_/hello.md", template : "_/markdown.html"} => "/examples/markdown/askama/without-context/hello");
	markdown_askama! ({"_/hello.md", template : "_/markdown.html", context : ()} => "/examples/markdown/askama/with-context-empty/hello");
	
	
	markdowns! ({"_", glob : "*.md"} => "/examples/markdowns-recursive/plain");
	markdowns! ({"_", glob : "*.md", header : "_/_header.html-0", footer : "_/_footer.html-0"} => "/examples/markdowns-recursive/simple");
	
	markdowns_askama! ({"_", glob : "*.md", template : "_/markdown.html"} => "/examples/markdowns-recursive/askama/without-context");
	markdowns_askama! ({"_", glob : "*.md", template : "_/markdown.html", context : ()} => "/examples/markdowns-recursive/askama/with-context-empty");
	
	
	markdown! ("_/with-frontmatter-json.md" => "/examples/markdown/plain/with-frontmatter-json");
	markdown! ("_/with-frontmatter-toml.md" => "/examples/markdown/plain/with-frontmatter-toml");
	markdown! ("_/with-frontmatter-yaml.md" => "/examples/markdown/plain/with-frontmatter-yaml");
	
	markdown_askama! ({"_/with-frontmatter-json.md", template : "_/markdown-with-frontmatter.html", context : ExampleAskamaContext} => "/examples/markdown/askama/with-context/with-frontmatter-json");
	markdown_askama! ({"_/with-frontmatter-toml.md", template : "_/markdown-with-frontmatter.html", context : ExampleAskamaContext} => "/examples/markdown/askama/with-context/with-frontmatter-toml");
	markdown_askama! ({"_/with-frontmatter-yaml.md", template : "_/markdown-with-frontmatter.html", context : ExampleAskamaContext} => "/examples/markdown/askama/with-context/with-frontmatter-yaml");
	
	markdown_askama! ({"_/with-context.md", template : "_/markdown-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.json"} => "/examples/markdown/askama/with-context/with-context-json");
	markdown_askama! ({"_/with-context.md", template : "_/markdown-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.toml"} => "/examples/markdown/askama/with-context/with-context-toml");
	markdown_askama! ({"_/with-context.md", template : "_/markdown-with-context.html", context : ExampleAskamaContext, context_from : "./files/context.yaml"} => "/examples/markdown/askama/with-context/with-context-yaml");
	
	
	asset! ("./markdown/hello.md" => "/examples/markdown/text/hello");
	assets! ({"./markdown", glob : "*.md"} => "/examples/markdowns-recursive/text");
	
	
	// ################################################################################
	
	
	asset_sass! ("_/css/main.scss");
	// NOTE:  Required, because `sass-rs` doesn't properly track imported files.
	// assets_watch! ("_/css");
	
	
	asset_js! ("_/js/main.js");
	// NOTE:  Not required for the moment.
	// assets_watch! ("_/js");
	
	
	assets_images! ("_/images");
	assets_icons! ("_/icons");
	
	assets_favicons! ("_/favicons");
	asset_favicon! ("_/favicons/favicon.ico" => "/favicon.ico");
	
	
	// ################################################################################
	
	
	asset! ("./files/robots.txt" => "/robots.txt");
	
	asset! ("./files/data.txt" => "/files/data/with-automatic-content-type.txt");
	asset! ({"./files/data.txt", content_type : text} => "/files/data/with-explicit-content-type.txt");
	
	assets! ({"./files", glob : "*"} => "/files/all");
	
	assets! ({"_", glob : "*"} => "/files/assets-all");
	assets! ({"_/css", glob : "*"} => "/files/assets-css");
	assets! ({"_/js", glob : "*"} => "/files/assets-js");
	assets! ({"_/images", glob : "*"} => "/files/assets-images");
	assets! ({"_/icons", glob : "*"} => "/files/assets-icons");
	assets! ({"_/favicons", glob : "*"} => "/files/assets-favicons");
	
	assets! ({".", glob : "*"} => "/sources");
	
	
	// ################################################################################
	
	
	asset! ("./files/data.txt" => {"/routes/with-extensions/a"});
	asset! ("./files/data.txt" => {"/routes/with-extensions/b-1", extensions : ()});
	asset! ("./files/data.txt" => {"/routes/with-extensions/b-2", extensions : {}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/c-1", extensions : {debug : "custom-debug"}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-1", extensions : {sitemap}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-2", extensions : {sitemap : {frequency : always}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-3", extensions : {sitemap : {frequency : default}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-4", extensions : {sitemap : {frequency : always, priority : 0.7}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-5", extensions : {sitemap : {frequency : default, priority : 0.7}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-6", extensions : {sitemap : {frequency : default, priority : default}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/d-7", extensions : {sitemap, debug : "custom-debug-with-sitemap"}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-8", extensions : {sitemap : {updated : "2022-03-04"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-9", extensions : {sitemap : {frequency : default, updated : "2022-03-04"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-10", extensions : {sitemap : {frequency : default, priority : 0.5, updated : "2022-03-04"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-11", extensions : {sitemap : {frequency : default, priority : default, updated : "2022-03-04"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-12", extensions : {sitemap : {frequency : default, priority : default, updated : "today"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/e-13", extensions : {sitemap : {frequency : default, priority : default, updated : "now"}}});
	asset! ("./files/data.txt" => {"/routes/with-extensions/f-14", extensions : {debug : "custom-debug",}});
	
	
	// ################################################################################
	
	
	sitemap! ({prefix : "https://example.com/", format : xml} => "/sitemap.xml");
	sitemap! ({prefix : "https://example.com/", format : text} => "/sitemap.txt");
	sitemap! ({prefix : SITE_URL_ABSOLUTE, format : text} => "/sitemap-2.txt");
	
	
	// ################################################################################
	
}
